const { DataTypes } = require("sequelize");
module.exports = (sequelize) => {
  const attributes = {
    userId: {
      type: DataTypes.BIGINT,
      allowNull: false,
      comment: null,
      primaryKey: true,
      field: "userId",
      autoIncrement: true,
    },
    fullName: {
      type: DataTypes.TEXT,
      allowNull: true,
      defaultValue: null,
      comment: null,
      primaryKey: false,
      field: "fullName",
      autoIncrement: false,
    },
    medium: {
      type: DataTypes.STRING(120),
      allowNull: true,
      defaultValue: null,
      comment: null,
      primaryKey: false,
      field: "medium",
      autoIncrement: false,
    },
    email: {
      type: DataTypes.STRING(60),
      allowNull: true,
      defaultValue: null,
      comment: null,
      primaryKey: false,
      field: "email",
      autoIncrement: false,
    },
    mobileNumber: {
      type: DataTypes.STRING(15),
      allowNull: true,
      defaultValue: null,
      comment: null,
      primaryKey: false,
      field: "mobileNumber",
      autoIncrement: false,
    },
    gender: {
      type: DataTypes.ENUM("MALE", "FEMALE", "OTHER"),
      allowNull: true,
      defaultValue: "OTHER",
      comment: null,
      field: "gender",
    },
    cast: {
      type: DataTypes.ENUM("SC", "ST", "OBC", "GENERAL", "OTHER"),
      allowNull: true,
      defaultValue: "OTHER",
      comment: null,
      field: "cast",
    },
    password: {
      type: DataTypes.STRING(255),
      allowNull: true,
      defaultValue: null,
      comment: null,
      primaryKey: false,
      field: "password",
      autoIncrement: false,
    },
    otp: {
      type: DataTypes.STRING(150),
      allowNull: true,
      defaultValue: null,
      comment: null,
      primaryKey: false,
      field: "otp",
      autoIncrement: false,
    },
    block: {
      type: DataTypes.INTEGER,
      allowNull: true,
      defaultValue: 0,
      comment: null,
      primaryKey: false,
      field: "block",
      autoIncrement: false,
    },
    profilePicture: {
      type: DataTypes.TEXT,
      allowNull: true,
      defaultValue: null,
      comment: null,
      primaryKey: false,
      field: "profilePicture",
      autoIncrement: false,
    },
    address: {
      type: DataTypes.TEXT,
      allowNull: true,
      defaultValue: null,
      comment: null,
      primaryKey: false,
      field: "address",
      autoIncrement: false,
    },
    schooling: {
      type: DataTypes.TEXT,
      allowNull: true,
      defaultValue: null,
      comment: null,
      primaryKey: false,
      field: "schooling",
      autoIncrement: false,
    },
    joiningDate: {
      type: DataTypes.DATE,
      allowNull: true,
      defaultValue: sequelize.literal("CURRENT_TIMESTAMP"),
      comment: null,
      primaryKey: false,
      field: "joiningDate",
      autoIncrement: false,
    },
    created: {
      type: DataTypes.DATE,
      allowNull: true,
      defaultValue: sequelize.literal("CURRENT_TIMESTAMP"),
      comment: null,
      primaryKey: false,
      field: "created",
      autoIncrement: false,
    },
    updated: {
      type: DataTypes.DATE,
      allowNull: true,
      defaultValue: sequelize.literal("CURRENT_TIMESTAMP"),
      comment: null,
      primaryKey: false,
      field: "updated",
      autoIncrement: false,
    },
    delete: {
      type: DataTypes.INTEGER,
      allowNull: true,
      defaultValue: 0,
      comment: null,
      primaryKey: false,
      field: "delete",
      autoIncrement: false,
    },
    createdBy: {
      type: DataTypes.INTEGER,
      allowNull: true,
      defaultValue: 0,
      comment: null,
      primaryKey: false,
      field: "createdBy",
      autoIncrement: false,
    },
    updatedBy: {
      type: DataTypes.INTEGER,
      allowNull: true,
      defaultValue: 0,
      comment: null,
      primaryKey: false,
      field: "updatedBy",
      autoIncrement: false,
    },
    deleteBy: {
      type: DataTypes.INTEGER,
      allowNull: true,
      defaultValue: 0,
      comment: null,
      primaryKey: false,
      field: "deleteBy",
      autoIncrement: false,
    },
  };
  const options = {
    tableName: "user",
    comment: "",
    indexes: [],
  };
  const userModel = sequelize.define("user_model", attributes, options);
  return userModel;
};
